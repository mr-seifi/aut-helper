version: "3.8"

services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:7.0.6-alpine
    volumes:
      - redis-data:/data/
    restart: always

  rabbitmq:
    image: rabbitmq:3.11-alpine
    command: rabbitmq-server

  beat:
    build: .
    command: celery -A aut_helper beat -l info
    volumes:
      - data:/app/data/
      - .:/app/
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - db


  migrate:
    build: .
    command: python manage.py migrate
    volumes:
      - data:/app/data/
      - .:/app/
    env_file:
      - ./.env
    depends_on:
      - db

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - /etc/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana-oss:latest
#    ports:
#      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  web:
    build: .
    volumes:
      - data:/app/data/
      - .:/app/
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - migrate
      - redis
      - db

  bot:
    build: .
    command: python manage.py startbot
    volumes:
      - data:/app/data/
      - .:/app/
    env_file:
      - ./.env
    depends_on:
      - migrate
      - redis
      - db

  worker:
    build: .
    command: celery -A aut_helper worker -B -l info
    volumes:
      - data:/app/data/
      - .:/app/
    env_file:
      - ./.env
    depends_on:
      - migrate
      - redis
      - beat
      - db

  monitoring:
    build: .
    command: python manage.py startmonitoring
    volumes:
      - data:/app/data/
      - .:/app/
    env_file:
      - ./.env
    depends_on:
      - migrate
      - redis
      - db

volumes:
  data:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data: